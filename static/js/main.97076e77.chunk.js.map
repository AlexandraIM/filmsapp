{"version":3,"sources":["components/Header/Header.tsx","components/Films/Film/Film.tsx","firebase.ts","actions/actions.ts","services/movie_service.ts","components/Films/Films.tsx","components/pages/DashboardPage.tsx","components/Button/Button.tsx","components/pages/DetailsPage.tsx","components/pages/EditPage.tsx","App.tsx","serviceWorker.js","reducers/index.js","store/index.js","index.tsx"],"names":["StyledHeader","styled","div","_templateObject","header","props","react_default","a","createElement","StyledFilm","Film_templateObject","film","onClick","clicked","id","alt","src","title","year","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","GET_MOVIES","SAVE_FILM","GET_FILM","saveToDb","dispatch","movie","movieToUpdate","Poster","Title","Type","Year","imdbID","ref","set","then","result","updateMovie","d","type","saveFilm","fetchData","once","response","Object","keys","val","map","i","objectSpread","catch","error","data","getMovies","StyledFilmsList","Films_templateObject","Films","this","getFilms","films","react_router_dom","to","concat","key","Film","console","log","React","Component","connect","state","Dashboard","components_Films_Films","StyledButton","button","Button_templateObject","color","children","StyledView","DetailsPage_templateObject","_templateObject2","Details","handleEditFilm","_this","history","push","match","url","handleBack","goBack","getFilm","params","_this2","react","Button","DetailsPage_StyledFilmsList","filmToShow","sort","Math","random","slice","filmId","StyledEditForm","EditPage_templateObject","StyledInput","input","EditPage_templateObject2","EditPage","changeHandler","e","name","target","value","setState","defineProperty","handleCancel","preventDefault","handleSave","save","onChange","App","Header","react_router","exact","path","component","Boolean","window","location","hostname","initialState","reducer","arguments","length","undefined","action","toConsumableArray","filmToUpdate","findIndex","f","find","store","createStore","compose","applyMiddleware","thunk","logger","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.97076e77.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { HeaderProps } from '../../interface';\n\nconst StyledHeader = styled.div`\n  overflow: hidden;\n  background-color: #f5f5f0;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  padding: 5px 5px;\n  text-align: center;\n  color: #ff0000;\n  margin-bottom: 10px;\n`\n\nconst header = (props: HeaderProps) => {\n  return ( \n    <StyledHeader>\n      <h1>{props.header}</h1>\n    </StyledHeader>\n    );\n}\n\nexport default header;","import React from 'react';\nimport styled from 'styled-components';\nimport {FilmProps} from '../../../interface';\n\n\nconst StyledFilm = styled.div`\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  max-width: 300px;\n  margin: auto;\n  text-align: center;\n  font-family: arial;\n  padding: 10px;\n  margin: 5px;\n  background-color: #fff;\n  cursor: pointer;\n`\n\nconst film = (props: FilmProps) => {\n  return (\n    <StyledFilm onClick={() => props.clicked(props.id)}>\n      <img alt=\"film poster\" src={props.src}></img>\n      <h2>{props.title}</h2>\n      <p>{props.year}</p>\n    </StyledFilm>\n  )\n}\n\n\nexport default film;","import * as firebase from 'firebase/app';\nimport 'firebase/firebase-database';\n\nlet config = {\n  apiKey: \"AIzaSyAeYNRj5191QwKNJbWMVvakRASTsT_YbFQ\",\n  authDomain: \"filmsdb-ce541.firebaseapp.com\",\n  databaseURL: \"https://filmsdb-ce541.firebaseio.com\",\n  projectId: \"filmsdb-ce541\",\n  storageBucket: \"filmsdb-ce541.appspot.com\",\n  messagingSenderId: \"838623909312\"\n};\nfirebase.initializeApp(config);\n\nlet database = firebase.database();\n\nexport default database;","import {fetchMovies, updateMovie} from '../services/movie_service';\n\nexport const GET_MOVIES = \"GET_MOVIES\";\nexport const SAVE_FILM = \"SAVE_FILM\";\nexport const GET_FILM = \"GET_FILM\"\n\nexport function getMovies (d) {\n  return {\n    type: GET_MOVIES,\n    data: d\n  }\n}\n\nexport function getFilm(id){\n  console.log(id);\n  \n  return {\n    type: GET_FILM,\n    filmId: id\n  }\n}\n\n\nexport function saveFilm(film){\n  return {\n    type: SAVE_FILM,\n    film: film\n  }\n}\n\nexport function saveToDb(film) {\n  return dispatch => {\n    return updateMovie(film)\n    .then(d => dispatch(saveFilm(film)))\n\n  }\n}\n\nexport function fetchData() { \n  return dispatch => {\n    return fetchMovies()\n    .then(d => dispatch(getMovies(d)))\n  }\n }","\nimport database from '../firebase';\n\nexport function fetchMovies () {\n  return database.ref('films').once('value')\n  .then(\n    response => {\n      let data = Object.keys(response.val()).map(i => { \n        return {\n          ...response.val()[i],\n          id: i\n        }\n      })\n      return data;\n    }\n  )\n  .catch(error => error)\n}\n\nexport function updateMovie (movie) {\n  let movieToUpdate = {\n    Poster: movie.Poster,\n    Title: movie.Title,\n    Type:  movie.Type,\n    Year: movie.Year,\n    imdbID: movie.imdbID\n  }\n  return database.ref('films/' + movie.id).set(movieToUpdate)\n  .then(result => {\n    return result;\n  })\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport FilmCard from './Film/Film';\nimport {FilmsProps} from '../../interface';\nimport {Link} from 'react-router-dom';\n\nimport {fetchData} from '../../actions/actions';\n\nconst StyledFilmsList = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n`\n\nclass Films extends React.Component<FilmsProps>{\n\n  componentDidMount(){\n    this.props.getFilms();\n  }\n\n  render(){\n    const films = this.props.films.map(film => {\n      return <Link to={`filmsapp/film/${film.id}`} key={film.id} >\n                <FilmCard \n                  title={film.Title} \n                  src={film.Poster}\n                  year={film.Year}\n                  id={film.id}\n                  clicked={() => {console.log(\"test\");\n                  }}/>\n              </Link>\n    } )\n    return ( \n      <StyledFilmsList>\n        {films}\n      </StyledFilmsList>)\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    films: state.films\n  };\n}\n\nconst mapDispatchToProps= (dispatch) => {\n  return {\n    getFilms : () => dispatch(fetchData())\n  };\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Films);","import React from 'react';\nimport Films from '../Films/Films';\n\nclass Dashboard extends React.Component {\n  render () {\n    return <Films/>\n  }\n}\n\nexport default Dashboard;","import React from 'react';\nimport styled from 'styled-components';\nimport {ButtonProps} from '../../interface';\n\nconst StyledButton = styled.button`\n    border: none;\n    color: white;\n    padding: 14px 28px;\n    margin: 5px;\n    cursor: pointer;\n    background: ${props => props.color};\n    border-radius: 5px;\n`;\n\nconst button = (props: ButtonProps) => {\n  return (\n    <StyledButton color={props.color} onClick={props.clicked}>{props.children}</StyledButton>\n  )\n}\n\nexport default button;","import * as React from 'react';\nimport styled from 'styled-components';\nimport Button from '../Button/Button';\nimport { connect } from 'react-redux';\nimport FilmCard from '../Films/Film/Film';\nimport {getFilm} from '../../actions/actions';\nimport {FilmDetails} from '../../interface/index';\nimport {Link} from 'react-router-dom';\n\nconst StyledView = styled.div`\n  width: 50%;\n  background-color: white;\n  padding: 14px 20px;\n  margin: auto;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  text-align:center;\n`\n\nconst StyledFilmsList = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n`\n\nclass Details extends React.Component<FilmDetails>{\n\n  componentDidMount(){\n    this.props.getFilm(this.props.match.params.id)\n  }\n\n  handleEditFilm = () => {\n    console.log(\"handleEditFilm\",this.props);\n    this.props.history.push(this.props.match.url + '/edit');\n  }\n\n  handleBack = () => {\n    this.props.history.goBack();\n  }\n\n  render () {\n    const films = this.props.films.map(film => {\n      return <Link to={`filmsapp/film/${film.id}`} key={film.id} >\n                <FilmCard \n                  title={film.Title} \n                  src={film.Poster}\n                  year={film.Year}\n                  id={film.id}\n                  clicked={() => {this.props.getFilm(film.id);\n                  }}/>\n              </Link>\n    })\n\n    return (\n      <div>\n        <StyledView>\n          <h2>{this.props.film.Title}</h2>\n          <img alt=\"film poster\" src={this.props.film.Poster}></img>\n          <p>{this.props.film.Year}</p>\n          <Button color=\"blue\" clicked={this.handleEditFilm}>Edit</Button>\n          <Button color=\"lightblue\" clicked={this.handleBack}>Back</Button>\n        </StyledView>\n        <StyledFilmsList>\n          {films}\n        </StyledFilmsList>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    film: state.filmToShow,\n    films: state.films.sort(() => 0.5 - Math.random()).slice(0, 3)\n  };\n}\n\nconst mapDispatchToProps= (dispatch) => {\n  return {\n    getFilm : (id) => dispatch(getFilm(id))\n  };\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Details);","import * as React from 'react';\nimport styled from 'styled-components';\nimport Button from '../Button/Button';\nimport { connect } from 'react-redux';\nimport FilmCard from '../Films/Film/Film';\nimport {getFilm} from '../../actions/actions';\nimport {FilmEdit} from '../../interface/index';\nimport {NavLink} from 'react-router-dom';\nimport {saveToDb} from '../../actions/actions';\n\n\nconst StyledEditForm = styled.div`\n  width: 100%;\n  background-color: white;\n  padding: 14px 20px;\n  margin: 8px 0px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  display: flex;\n`\nconst StyledInput = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n`\n\nclass EditPage extends React.Component<FilmEdit>{\n\n  state = {\n    imdbID:'',\n    Poster:'',\n    Title:'',\n    Year:''\n  }\n\n  componentDidMount(){\n    this.setState({...this.props.film});\n    }\n\n  changeHandler =(e) => {\n    const name = e.target.name;\n    const value = e.target.value\n    this.setState({\n      [name]:value })\n  }\n  handleCancel = (e) =>{\n    e.preventDefault();\n    this.props.history.goBack();\n  }\n\n  handleSave = (e) => {\n    e.preventDefault();\n    this.props.save(this.state);\n    this.props.history.goBack();\n  }\n\n  render () {\n\n    return (\n      <StyledEditForm>\n          <form >\n            <label>Image source:</label>\n            <StyledInput type=\"text\" value={this.state.Poster} name=\"Poster\" onChange={this.changeHandler}/>\n            <label>Title:</label>\n            <StyledInput type=\"text\" value={this.state.Title} name=\"Title\" onChange={this.changeHandler}/> \n            <label>Year</label>\n            <StyledInput type=\"text\" value={this.state.Year} name=\"Year\" onChange={this.changeHandler}/>\n            <Button clicked={(e) => this.handleSave(e)} color=\"green\">Save</Button>\n            <Button clicked={(e) => this.handleCancel(e)} color=\"red\">Cancel</Button>\n          </form>\n      </StyledEditForm>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    film: state.filmToShow\n  };\n}\n\nconst mapDispatchToProps= (dispatch) => {\n  return {\n    save : (film) => dispatch(saveToDb(film))\n  };\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(EditPage);","import * as React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Dashboard from './components/pages/DashboardPage'\nimport Details from './components/pages/DetailsPage';\nimport EditPage from './components/pages/EditPage';\n\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header header=\"Some cool films\"/>\n        <Route exact \n        path='/filmsapp' \n        component={Dashboard}></Route>\n        \n        <Route exact path='filmsapp/film/:id' component={Details}/>\n        <Route exact path='filmsapp/film/:id/edit' component={EditPage}/>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { GET_MOVIES,GET_FILM,SAVE_FILM} from '../actions/actions';\n\n\nconst initialState = {\n  films:[],\n  filmToShow:{}\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_MOVIES:\n      return {\n        ...state,\n        films: action.data\n      }\n    case SAVE_FILM:{\n      const films = [...state.films];\n      const filmToUpdate = films.findIndex(f => f.id === action.film.id);\n      films[filmToUpdate] = action.film;\n      return {\n        ...state,\n        films:films,\n        filmToShow: action.film\n      }\n    }\n    case GET_FILM: {\n      console.log(action.filmId);\n      \n      return {\n        ...state,\n        filmToShow: state.films.find(film => film.id === action.filmId)\n      }\n    }\n    default:\n      return state;\n  }\n}\n\nexport default reducer","import { createStore, applyMiddleware,compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers/index';\nimport logger from 'redux-logger';\n\nconst store = createStore(\n  reducer,\n  compose(\n    applyMiddleware(thunk,logger),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;","import * as React from 'react'\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}